<h2 align="center">Title: <%= @article.title %></h2>
<div class="well col-xs-8 col-xs-offset-2">
  <% if @article.user %>
    <ul class="listing">
      <div class="row center">
        <div class="col-md-4 col-md-offset-4">
          <li>Created by:</li>
          <li><%= link_to gravatar_for(@article.user), user_path(@article.user) %></li>
          <li class="article-title">
            <%= link_to@article.user.username, user_path(@article.user) %>
          </li>
          <li><small><%= pluralize(@article.user.articles.count, "article") if @article.user.articles %></small></li>
        </div>
      </div>
    </ul>
  <% end %>
  <div align="center" id="visualization"></div>
  <hr>
  <h4 class="center description"><strong>Description: </strong></h4>
  <hr>
    <%= simple_format(@article.description) %>
  <div class="article-action">
    <% if logged_in? && (current_user == @article.user || current_user.admin?) %>
    <%= link_to "Edit", edit_article_path(@article), class: "btn btn-xs btn-primary" %>
    <%= link_to "Delete", article_path(@article), method: :delete, data: { confirm: "Are you sure you want to delete the article?"}, class: "btn btn-xs btn-danger" %>
    <% end %>
    <%= link_to "View all articles", articles_path, class: "btn btn-xs btn-success" %>
  </div>
</div>
<script>
    $(document).on("ready", function() { //.on('turbolinks:load'
        $.ajax({
            type: "GET",
            contentType: "application/json; charset=utf-8",
            url: "<%= get_data_path %>",
            dataType: 'json',
            success: function (data) {
                if('<%= @article.lib %>' === 'vis')
                    d3.csv(data.url, function(data) {
                        visF(data);
                    });
                else
                    Plotly.d3.csv(data.url, function(err, rows){
                        plotlyF(rows);
                    });
            },
            error: function (result) {
                console.log(result);
            }
        });
    });

    function plotlyF(rows) {
        function unpack(rows, key) {
            return rows.map(function(row)
            { return row[key]; });}

        var trace1 = {
            x:unpack(rows, 'x'), y: unpack(rows, 'y'), z: unpack(rows, 'value'),
            mode: 'markers',
            marker: {
                size: 12,
                symbol: 'circle',
                line: {
                    color: unpack(rows, 'value'),
                    width: 2,
                    colorscale: 'true'},
                opacity: 0.8},
            showlegend: 'false',
            showscale: 'true',
            type: 'scatter3d'
        };

        var data = [trace1];
        var layout = {margin: {
                l: 0,
                r: 0,
                b: 0,
                t: 0
            }};
        var container = document.getElementById('visualization');
        Plotly.newPlot(container, data, layout);
    }

    function visF(csv) {

        var dataVis = new vis.DataSet();

        var options = {
            width:  '600px',
            height: '600px',
            style: 'surface',
            showPerspective: true,
            showGrid: true,
            showShadow: false,
            keepAspectRatio: true,
            verticalRatio: 0.5
        };
        dataVis = convertCsvJsonToVisDataSet(csv);
        // Instantiate our graph object.
        var container = document.getElementById('visualization');
        var graph3d = new vis.Graph3d(container, dataVis, options);
    }

    function convertCsvJsonToVisDataSet(csv) {
        var data = new vis.DataSet();
        for(var i=0; i<csv.length; i++) {
            data.add({x:parseFloat(csv[i].x),
                y:parseFloat(csv[i].y),
                z:parseFloat(csv[i].value)});
        }
        return data;
    }
</script>
