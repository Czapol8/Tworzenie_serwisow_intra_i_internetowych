<script src="http://d3js.org/d3.v2.js"></script>
<script type="text/javascript" src="http://x3dom.org/x3dom/example/x3dom.js"></script>
<p id="notice"><%= notice %></p>

<p>
  <strong>Name:</strong>
  <%= @datafile.name %>
</p>

<p>
  <strong>Filen:</strong>
  <%= @datafile.filen %>
</p>

<p>
  <strong>User:</strong>
  <%= @datafile.user.username %>
</p>
<div align="center" id="vis"></div>
<div align="center" id="visualization"></div>

<%= link_to 'Edit', edit_datafile_path(@datafile) %> |
<%= link_to 'Back', datafiles_path %>

<script>
    $(document).on('turbolinks:load', function() {
        $.ajax({
            type: "GET",
            contentType: "application/json; charset=utf-8",
            url: "<%= get_data_path %>",
            dataType: 'json',
            success: function (data) {
                d3.csv(data.url, function(data) {
                    //visF(data);
                    loadD3(data);
                });
            },
            error: function (result) {
                console.log(result);
            }
        });
    });

    x3d = d3.select("#vis")
        .append("x3d")
        .attr("height", "400px")
        .attr("width", "400px")
    ;
    var scene = x3d.append("scene");
    scene.append("viewpoint")
        .attr("centerOfRotation", "3.75 0 10")
        .attr("position", "13.742265188709691 -27.453522975182366 16.816062840792625")
        .attr("orientation", "0.962043810961999 0.1696342804961945 0.21376603254551874 1.379433089729343");

    function loadD3(data) {

        console.log(data);
        var random = d3.range(6).map( function() { return Math.random()*20; } ); //do wczytania danych

        shapes = scene.selectAll("transform").data( random );
        shapesEnter = shapes
            .enter()
            .append( "transform" )
            .append( "shape" )
        ;
        // Enter and update
        shapes.transition()
            .attr("translation", function(d,i) { return i*1.5 + " 0.0 " + d/2.0; } )
            .attr("scale", function(d) { return "1.0 1.0 " + d; } )
        ;

        shapesEnter
            .append("appearance")
            .append("material")
            .attr("diffuseColor", "steelblue" );

        shapesEnter.append( "box" )
            .attr( "size", "1.0 1.0 1.0" );
    }


    function visF(csv) {

        var data = new vis.DataSet();

        var options = {
            width:  '800px',
            height: '800px',
            style: 'surface',
            showPerspective: true,
            showGrid: true,
            showShadow: false,
            keepAspectRatio: true,
            verticalRatio: 0.5
        };
        data = convertCsvJsonToVisDataSet(csv);
        // Instantiate our graph object.
        var container = document.getElementById('visualization');
        var graph3d = new vis.Graph3d(container, data, options);
    }

    function convertCsvJsonToVisDataSet(csv) {
        var data = new vis.DataSet();
        for(var i=0; i<csv.length; i++) {
            data.add({x:parseFloat(csv[i].x),
                y:parseFloat(csv[i].y),
                z:parseFloat(csv[i].value)});
        }
        return data;
    }
</script>