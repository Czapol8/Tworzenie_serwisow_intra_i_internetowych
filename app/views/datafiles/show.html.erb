<script type="text/javascript" src="/home/czapol/projekt/Tworzenie_servisow_intra_i_internetowych/app/assets/javascripts/x3dom.js"></script>
<p id="notice"><%= notice %></p>

<p>
  <strong>Name:</strong>
  <%= @datafile.name %>
</p>

<p>
  <strong>Filen:</strong>
  <%= @datafile.filen %>
</p>

<p>
  <strong>User:</strong>
  <%= @datafile.user.username %>
</p>

<div align="center" id="visualization"></div>
<svg id="graph"></svg>
<%= link_to 'Edit', edit_datafile_path(@datafile) %> |
<%= link_to 'Back', datafiles_path %>

<script>
    $(document).on('turbolinks:load', function() {
        $.ajax({
            type: "GET",
            contentType: "application/json; charset=utf-8",
            url: "<%= get_data_path %>",
            dataType: 'json',
            success: function (data) {
                console.log(data);
                d3.csv(data.url, function(data) {
                    console.log(data);
                    //visF();
                    //visF(data);
                      de3(data);
                });

                //draw(data);
            },
            error: function (result) {
                error();
            }
        });
    });
    function draw(data) {
        var color = d3.schemeCategory20b;
        var width = 420,
            barHeight = 20;

        var x = d3.scaleLinear()
            .range([0, width])
            .domain([0, d3.max(data)]);

        var chart = d3.select("#graph")
            .attr("width", width)
            .attr("height", barHeight * data.length);

        var bar = chart.selectAll("g")
            .data(data)
            .enter().append("g")
            .attr("transform", function (d, i) {
                return "translate(0," + i * barHeight + ")";
            });

        bar.append("rect")
            .attr("width", x)
            .attr("height", barHeight - 1)
            .style("fill", function () {
                return color
            })

        bar.append("text")
            .attr("x", function (d) {
                return x(d) - 10;
            })
            .attr("y", barHeight / 2)
            .attr("dy", ".35em")
            .style("fill", "white")
            .text(function (d) {
                return d;
            });
    }

    function error() {
        console.log("error")
    }

    //d3 graph
    function de3(data)
    {
      function randomData() {//just for test
        return d3.range(6).map( function() { return Math.random()*20; } )
      };

      x3d = d3.select("body")
                    .append("x3d")
                    .attr( "height", "400px" )
                    .attr( "width", "400px" )
                    ;
      var scene = x3d.append("scene");
      scene.append("viewpoint")
           .attr( "centerOfRotation", "3.75 0 10")
           .attr( "position", "13.742265188709691 -27.453522975182366 16.816062840792625" )
           .attr( "orientation", "0.962043810961999 0.1696342804961945 0.21376603254551874 1.379433089729343" )
           ;

      function refresh( data ) {
        shapes = scene.selectAll("transform").data( data );
        shapesEnter = shapes
             .enter()
             .append( "transform" )
             .append( "shape" )
             ;
        shapes.transition()
             .attr("translation", function(d,i) { return i*1.5 + " 0.0 " + d/2.0; } )
             .attr("scale", function(d) { return "1.0 1.0 " + d; } )
             ;

        shapesEnter
            .append("appearance")
            .append("material")
            .attr("diffuseColor", "steelblue" );

        shapesEnter.append( "box" )
           .attr( "size", "1.0 1.0 1.0" );
      }

      refresh( randomData() )
      setInterval(
        function(){
          refresh( randomData() );
        },
        2500);
    }


    function visF(csv) {

        var data = new vis.DataSet();
        // sin/cos
        //var counter = 0;
        // var steps = 30;
        // var axisMax = 314;
        // var axisStep = axisMax / steps;
        // for (var x = 0; x < axisMax; x+=axisStep) {
        //     for (var y = 0; y < axisMax; y+=axisStep) {
        //         var value = (Math.sin(x/50) * Math.cos(y/50) * 50 + 50);
        //         data.add({id:counter++,x:x,y:y,z:value,style:value});
        //     }
        // }

        var options = {
            width:  '800px',
            height: '800px',
            style: 'surface',
            showPerspective: true,
            showGrid: true,
            showShadow: false,
            keepAspectRatio: true,
            verticalRatio: 0.5
        };
        data = convertCsvJsonToVisDataSet(csv);
        // Instantiate our graph object.
        var container = document.getElementById('visualization');
        var graph3d = new vis.Graph3d(container, data, options);
    }

    function convertCsvJsonToVisDataSet(csv) {
        var data = new vis.DataSet();
        for(var i=0; i<csv.length; i++) {
            data.add({x:parseFloat(csv[i].x),
                y:parseFloat(csv[i].y),
                z:parseFloat(csv[i].value)});
        }
        return data;
    }
</script>
